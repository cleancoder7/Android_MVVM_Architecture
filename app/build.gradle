import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'

android {

    compileSdkVersion 29

    defaultConfig {
        applicationId "com.example.android_rd_code"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    dataBinding {
        enabled = true
    }

    flavorDimensions "androidrnd"
    def appName = 'android-rnd'


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.debug

            // create apk using flavor name and current data
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def name = appName + "_" + getCurrentFlavor() + "_" + variant.mergedFlavor.versionName + "_" +
                            variant.mergedFlavor.versionCode + "_" +
                            getDate() + ".apk";
                    output.outputFileName = name
                }
            }
        }
        debug {
            debuggable true
        }


    }

    productFlavors {

        dev {
            buildConfigField "String", "BASE_URL", '"https://www.google.com/"'
        }

    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'

    // recycler view : show h v g data
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // all material view
    implementation "com.google.android.material:material:1.0.0"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.6.2"
    implementation "com.squareup.retrofit2:converter-gson:2.6.2"
    implementation "com.squareup.okhttp3:logging-interceptor:3.12.3"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
    implementation "com.squareup.okhttp3:okhttp:3.12.3"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0-rc02"

    // Dagger2 core
    implementation "com.google.dagger:dagger:2.22"
    annotationProcessor "com.google.dagger:dagger-compiler:2.22"

    // Dagger Android
    implementation "com.google.dagger:dagger-android:2.22"
    implementation "com.google.dagger:dagger-android-support:2.22"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.22"

    // Reactive Streams (convert Observable to LiveData)
    implementation "android.arch.lifecycle:reactivestreams:1.1.1"

    // Glide
    implementation "com.github.bumptech.glide:glide:4.9.0"
    annotationProcessor "com.github.bumptech.glide:compiler:4.9.0"

    // All dimens
    implementation 'com.intuit.sdp:sdp-android:1.0.6'


}

// get current flavor ame
def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
    Pattern pattern;
    pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    Matcher matcher = pattern.matcher(tskReqStr)
    if (matcher.find())
        return matcher.group(1).toLowerCase()
    else {
        println "NO MATCH FOUND"
        return "";
    }
}

// get current data
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}
